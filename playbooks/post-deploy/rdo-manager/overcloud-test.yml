---
- include: overcloud-network.yml
- include: overcloud-test-images.yml

- name: Group hosts by post action - tempest
  hosts: undercloud
  gather_facts: no
  tasks:
    - group_by: key="tempest"
      when: installer.tempest.enabled|bool

- name: Execute tempest
  hosts: tempest
  tasks:
    - name: create tempest directory
      file: path={{ instack_user_home }}/tempest state=directory

    - name: install tempest rpm (remove when enabled by default)
      yum: name=openstack-tempest state=present
      sudo: yes
      when: product.full_version != "7-director"

    - name: execute configure tempest directory
      shell: cd /home/{{ provisioner.remote_user }}/tempest && \
             /usr/share/openstack-tempest*/tools/configure-tempest-directory

    - name: generate tempest.conf for minimun basic scenario
      shell: >
          source {{ instack_user_home }}/overcloudrc;
          cd /home/{{ provisioner.remote_user }}/tempest && \
          tools/config_tempest.py --out etc/tempest.conf \
          --network-id {{ public_network_uuid }} \
          --deployer-input ~/tempest-deployer-input.conf \
          --debug --create --image /home/stack/fedora-user.qcow2 \
          identity.uri $OS_AUTH_URL \
          identity.admin_password $OS_PASSWORD \
          network.tenant_network_cidr 192.168.0.0/24 \
          object-storage.operator_role swiftoperator \
          compute.image_ssh_user fedora \
          compute.ssh_user fedora \
          scenario.ssh_user fedora \
          compute.flavor_ref 2 \
          compute.flavor_ref_alt 2
      when: installer.tempest.test_regex is defined and
            installer.tempest.test_regex == "tempest\.scenario\.test_minimum_basic"

    - name: generate tempest.conf for tempest
      shell: >
          source {{ instack_user_home }}/overcloudrc;
          cd /home/{{ provisioner.remote_user }}/tempest && \
          tools/config_tempest.py --out etc/tempest.conf \
          --network-id {{ public_network_uuid }} \
          --deployer-input ~/tempest-deployer-input.conf \
          --debug --create \
          identity.uri $OS_AUTH_URL \
          identity.admin_password $OS_PASSWORD \
          network.tenant_network_cidr 192.168.0.0/24 \
          object-storage.operator_role swiftoperator \
          orchestration.stack_owner_role heat_stack_owner \
          validation.ping_timeout 300
      when: installer.tempest.test_regex is defined and
            installer.tempest.test_regex != "tempest\.scenario\.test_minimum_basic"

    - name: copy skipfile into stack home
      copy: src=files/tempest_skip/{{ installer.tempest.skip_file }} dest={{ instack_user_home }}/skipfile owner=stack group=stack

    - name: run tempest based overcloud tests
      ignore_errors: yes
      shell: >
          source {{ instack_user_home }}/overcloudrc;
          cd /home/{{ provisioner.remote_user }}/tempest && \
          tools/run-tests.sh --skip-file {{ instack_user_home }}/skipfile \
          {{ installer.tempest.test_regex }} &> {{ instack_user_home }}/tempest_console.log

    - name: check test_minimum_basic output
      ignore_errors: yes
      shell: "[ `grep \"Passed\" tempest_console.log | cut -d \":\" -f2` -eq 1 ]"
      register: tempest_console_log_passed_grep
      when: installer.tempest.test_regex is defined and
            installer.tempest.test_regex == "tempest\.scenario\.test_minimum_basic"

    - name: fail when tempest comsole log does not show 1 passed test returned
      fail: msg="tempest.scenario.test_minimum_basic did not return 1 passsed test."
      when: tempest_console_log_passed_grep is defined and
            tempest_console_log_passed_grep.rc != 0

    - name: fetch tempest result
      fetch: src={{ installer.tempest.dir }}/tempest.xml dest={{ lookup('env', 'PWD') }}/nosetests.xml flat=yes

