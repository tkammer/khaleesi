---
- name: Pre-provisioning tasks
  hosts: localhost
  sudo: no
  tasks:
    - name: Group by provisioner type
      group_by: key={{ provisioner.type }}

    - name: Add the host to the inventory
      add_host:
        name="host0"
        groups="provisioned"
        ansible_fqdn="{{ lookup('env', 'BEAKER_MACHINE') }}"
        ansible_user="{{ provisioner.remote_user }}"
        ansible_ssh_private_key_file="{{ provisioner.key_file }}"
        ansible_host="{{ lookup('env', 'BEAKER_MACHINE') }}"

- name: Use beaker to provision the machine
  hosts: localhost
  tasks:
    - name: Check if beakerCheckOut.sh script exists
      stat: path="{{base_dir}}/khaleesi-settings/beakerCheckOut.sh"
      register: beakerCheckOut_present

    - name: Remove beakerCheckOut.sh script if it exists
      command: rm -rf {{base_dir}}/khaleesi-settings/beakerCheckOut.sh
      when: beakerCheckOut_present.stat.exists == True

    - name: Get beakerCheckOut.sh file from khaleesi-settings
      shell: >
        chdir={{base_dir}}/khaleesi-settings
        cp {{base_dir}}/khaleesi-settings/scripts/beaker/beakerCheckOut.sh .

    - name: Check if beakerCheckOut.sh script exists
      stat: path="{{base_dir}}/khaleesi-settings/beakerCheckOut.sh"
      register: beakerCheckOut_downloaded

    - name: Fail when can't get checkout script
      fail: msg="Cannot get {{ provisioner.beaker_checkout_script }}. Exiting with failure."
      when: beakerCheckOut_downloaded.stat.exists == False

    - name: Chmod if file exists
      shell: >
        chdir={{base_dir}}/khaleesi-settings
        chmod +x beakerCheckOut.sh
      when: beakerCheckOut_downloaded.stat.exists == True

    - name: Return the Beaker machine if it is checked out
      shell: ssh -o 'StrictHostKeyChecking=no' root@{{ lookup('env', 'BEAKER_MACHINE') }} "return2beaker.sh"
      ignore_errors: yes
      async: 60

    - name: Reboot machine if return2beaker hangs
      shell: ssh -o 'StrictHostKeyChecking=no' root@{{ lookup('env', 'BEAKER_MACHINE') }} "reboot"
      ignore_errors: yes

    - name: Provision beaker machine with password
      shell: >
        chdir={{base_dir}}/khaleesi-settings
        {{base_dir}}/khaleesi-settings/beakerCheckOut.sh --arch={{ provisioner.beaker_arch }} --family={{ provisioner.beaker_family }} --distro={{ provisioner.beaker_distro }} --variant={{ provisioner.beaker_variant }} --hostrequire=hostlabcontroller={{ provisioner.host_lab_controller }} --username={{ provisioner.beaker_user_name }} --password=$BEAKER_PASSWORD --task=/CoreOS/rhsm/Install/automatjon-keys --keyvalue=HVM=1  --ks_meta="ksdevice=link" --whiteboard={{ provisioner.whiteboard_message }} --job-group={{ provisioner.beaker_group }} --machine={{ lookup('env', 'BEAKER_MACHINE') }} --timeout=720 >/dev/null 2>&1
      register: beaker_job_status
      async: 7200
      poll: 180
      no_log: true
      when: provisioner.beaker_password is defined

    - name: provision beaker machine with kerberos auth
      shell: >
        chdir={{base_dir}}/khaleesi-settings
        {{base_dir}}/khaleesi-settings/beakerCheckOut.sh --arch={{ provisioner.beaker_arch }} --family={{ provisioner.beaker_family }} --distro={{ provisioner.beaker_distro }} --variant={{ provisioner.beaker_variant }} --hostrequire=hostlabcontroller={{ provisioner.host_lab_controller }} --task=/CoreOS/rhsm/Install/automatjon-keys --keyvalue=HVM=1 --ks_meta=ksdevice=link --whiteboard={{ provisioner.whiteboard_message }} --job-group={{ provisioner.beaker_group }} --machine={{ lookup('env', 'BEAKER_MACHINE') }} --timeout=720;
      register: beaker_job_status
      async: 7200
      poll: 180
      when: provisioner.beaker_password is not defined
