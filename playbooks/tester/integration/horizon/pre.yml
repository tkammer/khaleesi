---
- include: ../common/demo_tenant.yml
- include: ../common/upload_image.yml

- name: Allow access to horizon from floating IP
  hosts: controller
  sudo: yes
  gather_facts: no
  vars:
      horizon_hosts_conf: /etc/httpd/conf.d/15-horizon_vhost.conf
  tasks:
      - lineinfile: dest={{ horizon_hosts_conf }} insertafter="ServerAlias" line="  ServerAlias {{ ansible_host }}" state=present
      - service: name=httpd state=restarted

- name: Get the list of avaialble services
  hosts: controller
  sudo: yes
  gather_facts: no
  environment:
    OS_USERNAME: admin
    OS_PASSWORD: "{{ admin_password | default('redhat') }}"
    OS_AUTH_URL: "http://{{ ansible_default_ipv4.address }}:35357/v2.0/"
    OS_TENANT_NAME: admin
  tasks:
    - name:  Get available openstack services
      shell: for x in `keystone service-list | grep -v name | awk '{ print $4; }' | grep -v -e '^$'`; do status=$(keystone service-get $x | grep enabled | awk '{print $4}'); echo "$x $status"; done ;
      register: integration_enabled_services

    - name:  Get available nova services
      shell: nova-manage service list | grep -v Binary | grep enabled | awk '{print $1;}' ORS=',' | grep -v -e '^$' | sed 's/,$//'
      register: integration_nova_services

    - name:  Get available cinder services
      shell: cinder-manage service list | grep -v Binary | grep enabled | awk '{print $1;}' ORS=',' | grep -v -e '^$' | sed 's/,$//'
      register: integration_cinder_services

    - name:  Get available netwrok agents
      shell: neutron agent-list -F binary -F host -F alive -F admin_state_up | grep -v host | grep True| awk '{ print $8};' ORS=','|  sed 's/,$//'
      register: integration_network_agents

    - name:  Get available heat services
      shell: heat-manage service list | grep -v Binary |grep up |awk '{print $2;}' ORS=',' | grep -v -e '^$' | sed 's/,$//'
      register: integration_orchestration_services

    - name: Get the status of the redhat-access-plugin-openstak plugin
      shell: if yum list installed redhat-access-plugin-openstack > /dev/null 2>&1; then echo "True"; else echo "False"; fi;
      register: redhat_access_status

    - name: Register facts with enabled services
      set_fact:
        integration_enabled_services="{{ integration_enabled_services.stdout_lines }}"
        integration_nova_services="{{ integration_nova_services.stdout }}"
        integration_cinder_services="{{ integration_cinder_services.stdout }}"
        integration_network_agents="{{ integration_network_agents.stdout }}"
        integration_orchestration_services="{{ integration_orchestration_services.stdout }}"
        redhat_plugin_status="{{ redhat_access_status.stdout }}"

- name: Prepare repository with tests
  hosts: tester
  sudo: no
  gather_facts: no
  vars:
      controller_name: "{{ provisioner.nodes.controller.name }}"
      horizon_tests:
          admin_password: "{{ hostvars[controller_name].admin_password | default('redhat') }}"
          demo_password: "{{ tester.accounts[0].password | default('redhat') }}"
          demo_username: "{{ tester.accounts[0].username | default('demo') }}"
      tmp_controller_host: "{{ hostvars[controller_name].ansible_default_ipv4.address }}"
      services_status:
        enabled_services: "{{ hostvars[controller_name].integration_enabled_services }}"
        compute_services: "{{ hostvars[controller_name].integration_nova_services }}"
        block_storage_services: "{{ hostvars[controller_name].integration_cinder_services }}"
        network_agents: "{{ hostvars[controller_name].integration_network_agents }}"
        orchestration_services: "{{ hostvars[controller_name].integration_orchestration_services }}"
        redhat_plugin: "{{ hostvars[controller_name].redhat_plugin_status }}"
      horizon_conf_dest: ~/{{ tester.dir }}/openstack_dashboard/test/integration_tests/horizon.conf

  tasks:
      - name: Patch horizon.conf (test configuration)
        ini_file:
            dest={{ horizon_conf_dest }}
            section={{ item.section }}
            option={{ item.key }}
            value={{ item.value }}
        with_items:
            - { section: 'identity', key: 'username', value: "{{ horizon_tests.demo_username }}"}
            - { section: 'identity', key: 'password', value: "{{ horizon_tests.demo_password }}"}
            - { section: 'identity', key: 'admin_password', value: "{{ horizon_tests.admin_password }}"}
            - { section: 'identity', key: 'rh_portal_login', value: "{{ tester.integration.subscription.username  }}" }
            - { section: 'identity', key: 'rh_portal_pass', value: "{{ tester.integration.subscription.password }}" }
            - { section: 'service_available', key: 'redhat_access_plugin', value: "{{ services_status.redhat_plugin }}"}
            - { section: 'dashboard', key: 'login_url', value: "http://{{ tmp_controller_host }}/dashboard"}
            - { section: 'dashboard', key: 'dashboard_url', value: "http://{{ tmp_controller_host }}"}
            - { section: 'dashboard', key: 'help_url', value: "{{ tester.integration.horizon.help_url }}"}
            - { section: 'service_available', key: 'sahara', value: "False"}
            - { section: 'service_available', key: 'compute_services', value: "{{ services_status.compute_services }}"}
            - { section: 'service_available', key: 'block_storage_services', value: "{{ services_status.block_storage_services }}"}
            - { section: 'service_available', key: 'network_agents', value: "{{ services_status.network_agents }}"}
            - { section: 'service_available', key: 'orchestration_services', value: "{{ services_status.orchestration_services }}"}

      - name: Save the openstack services status to the horizon.conf file
        ini_file:
            dest={{ horizon_conf_dest }}
            section='service_available'
            option={{ item.split()[0] }}
            value='{{ item.split()[1] }}'
        with_items: services_status.enabled_services

- name: Turn hosts file to ordinary file
  hosts: localhost
  gather_facts: no
  tasks:
    - copy:
        src: "{{ lookup('env', 'PWD') }}/hosts"
        dest: "{{ lookup('env', 'PWD') }}/hosts-horizon"

- include: selenium_grid.yml
