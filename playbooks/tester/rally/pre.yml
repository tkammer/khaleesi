---
- name: Install Rally dependencies on the machine
  hosts: tester
  gather_facts: no
  sudo: yes
  tasks:
      #TODO(tkammer): move the list of packages to khaleesi-settings
    - name: Install support packages for pip-based deps building
      yum: name={{ item }} state=present
      with_items:
        - git
        - wget
        - which
        - gcc
        - libffi-devel
        - libxml2-devel
        - libxslt-devel
        - openssl-devel
        - python-virtualenv
        - postgresql-devel
        - python-devel
        - gmp-devel
    - command: easy_install pip

- name: Install Rally on the machine
  hosts: tester
  gather_facts: no
  tasks:
    - name: Clone Rally from git repo
      git: repo={{ tester.git.repo }} version={{ tester.git.revision }}
           dest={{ tester.rally.dir }}

#      # This URL should be in the config file (khaleesi settings)
#    - name: Download cirros image
#      get_url: url=http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-disk.img dest={{ tester.rally.dir }}/etc/{{ tester.rally.cirros_image_file }} mode=0440

    - name: Clone Rally-Plugins git repo
      git:
        repo: "{{ tester.plugins_git.repo }}"
        version: "{{ tester.plugins_git.revision }}"
        dest: "~/.rally/plugins"

    - name: Run Rally installation script
      shell: "{{ tester.rally.dir }}/install_rally.sh -v -y -d {{ tester.rally.path }} | tee {{ tester.rally.dir }}/rally_install.log"
      args:
        creates: "{{ tester.rally.path }}/bin/rally"

- name: Prepare Openstack
  hosts: controller
  tasks:
    - name: Create nano falvor
      shell: "source /root/keystonerc_admin && nova flavor-create m1.nano 42 64 0 1"
      sudo: yes
      # ignore errors if flavor already created
      ignore_errors: true

    - name: Create Glance Image
      glance_image:
        login_username: admin
        login_password: "{{ hostvars[provisioner.nodes.controller.name].admin_password | default('redhat') }}"
        login_tenant_name: admin
        name: "{{ tester.guest_image.name }}"
#        disk_format: ami
        state: present
        copy_from: "{{ tester.guest_image.url }}"

- name: Enable VRRP Failover
  hosts: network
  sudo: yes
  tasks:
    - name: Disable TTY requirement for sudo
      lineinfile:
        dest: /etc/sudoers
        state: absent
        regexp: "^Defaults    requiretty"

- name: Enable VRRP Failover
  hosts: tester
  sudo: no
  tasks:
    - name: Copy private key to tester
      copy:
        src: "{{ provisioner.key_file }}"
        dest: "{{ tester.rally.tmp.private_key }}"
        mode: 0600
      when: tester.rally.tmp is defined and tester.rally.tmp.private_key is defined

